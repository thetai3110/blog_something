{"version":3,"sources":["pages/login/signup_page.js","redux/login/login.actions.js","pages/login/components/others-login.component.js"],"names":["connect","login","error","message","dispatch","setError","err","setMessage","emailRef","useRef","passwordRef","passwordConfirmRef","signup","useAuth","e","a","preventDefault","current","value","auth","currentUser","sendEmailVerification","url","process","className","role","style","color","fontSize","display","onSubmit","htmlFor","id","type","ref","data-type","to","LoginTypes","SET_ERROR","payload","SET_MESSAGE","withRouter","history","loginWithFacebook","loginWithGoogle","push","onClick"],"mappings":"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","file":"static/js/10.92119b25.chunk.js","sourcesContent":["import { useRef } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useAuth } from \"../../contexts/auth_context\"\r\nimport { auth } from \"../../firebase\"\r\nimport { setError, setMessage } from \"../../redux/login/login.actions\"\r\nimport OthersLogin from \"./components/others-login.component\"\r\nimport './login_page.css';\r\n\r\nconst SignUpPage = ({ error, message, setError, setMessage }) => {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { signup } = useAuth()\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError(\"Passwords do not match\")\r\n        }\r\n        try {\r\n            setError(\"\")\r\n            setMessage(\"\")\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            await auth.currentUser.sendEmailVerification({\r\n                url: `${process.env.REACT_APP_CLIENT}/`,\r\n            });\r\n            setMessage(\"Success, please check email and verify email that you just register!\")\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"login_page\">\r\n            <div className=\"login-wrap\">\r\n                <div className=\"login-content\">\r\n                    <h2>sign up</h2>\r\n                    <div className=\"alert alert-danger\" role=\"alert\" style={{ color: 'red', fontSize: '13px', display: error === '' ? 'none' : 'block' }}>\r\n                        {error}\r\n                    </div>\r\n                    <div className=\"alert alert-success\" role=\"alert\" style={{ fontSize: '13px', display: message === \"\" ? 'none' : 'block' }}>\r\n                        {message}\r\n                    </div>\r\n                    <div className=\"login-form\">\r\n                        <form className=\"sign-up\" onSubmit={handleSubmit}>\r\n                            <div className=\"group\">\r\n                                <label htmlFor=\"pass\" className=\"label\">Email Address</label>\r\n                                <input id=\"pass-signup\" type=\"text\" className=\"input\" ref={emailRef}></input>\r\n                            </div>\r\n                            <div className=\"group\">\r\n                                <label htmlFor=\"pass\" className=\"label\">Password</label>\r\n                                <input id=\"pass-signup\" type=\"password\" ref={passwordRef} className=\"input\" data-type=\"password\"></input>\r\n                            </div>\r\n                            <div className=\"group\">\r\n                                <label htmlFor=\"pass\" className=\"label\">Repeat Password</label>\r\n                                <input id=\"pass-repeat-signup\" type=\"password\" ref={passwordConfirmRef} className=\"input\" data-type=\"password\"></input>\r\n                            </div>\r\n\r\n                            <div className=\"group\">\r\n                                <input type=\"submit\" className=\"button\" value=\"Sign Up\"></input>\r\n                            </div>\r\n                            <div className=\"link-redirect\">\r\n                                <Link to=\"/login\">Already Member?</Link>\r\n                            </div>\r\n                            <div className=\"hr\"></div>\r\n                            <OthersLogin />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = ({ login }) => ({\r\n    error: login.error,\r\n    message: login.message\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setError: err => dispatch(setError(err)),\r\n    setMessage: message => dispatch(setMessage(message)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpPage);","import { LoginTypes } from \"./login.types\";\r\n\r\nexport const setError= err => ({\r\n    type: LoginTypes.SET_ERROR,\r\n    payload: err\r\n})\r\n\r\nexport const setMessage = message => ({\r\n    type: LoginTypes.SET_MESSAGE,\r\n    payload: message\r\n})","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { useAuth } from '../../../contexts/auth_context';\r\nimport { setError } from '../../../redux/login/login.actions';\r\nimport './other-login.component.css';\r\n\r\nconst OthersLogin = ({ setError, history }) => {\r\n    const { loginWithFacebook, loginWithGoogle } = useAuth();\r\n    async function handleLoginFacebook(e) {\r\n        e.preventDefault()\r\n        try {\r\n            setError(\"\")\r\n            await loginWithFacebook()\r\n            history.push('/')\r\n        } catch (error) {\r\n            setError(error.message)\r\n        }\r\n    }\r\n    async function handleLoginGoogle(e) {\r\n        e.preventDefault()\r\n        try {\r\n            setError(\"\")\r\n            await loginWithGoogle()\r\n            history.push('/')\r\n        } catch (error) {\r\n            setError(error.message)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"login-other\">\r\n            <ul>\r\n                <li className=\"fb\"><button onClick={handleLoginFacebook}><i className=\"fa fa-facebook-square\"></i></button></li>\r\n                <li className=\"gl\"><button onClick={handleLoginGoogle}><i className=\"fa fa-google\"></i></button></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setError: err => dispatch(setError(err)),\r\n})\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(OthersLogin));"],"sourceRoot":""}