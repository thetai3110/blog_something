{"version":3,"sources":["pages/login/components/others-login.component.js","pages/login/login.page.js","redux/login/login.actions.js"],"names":["withRouter","connect","dispatch","setError","err","history","useAuth","loginWithFacebook","loginWithGoogle","e","a","preventDefault","push","message","className","onClick","error","login","console","log","emailRef","useRef","passwordRef","logout","current","value","user","emailVerified","role","style","color","fontSize","display","onSubmit","htmlFor","id","type","ref","data-type","to","LoginTypes","SET_ERROR","payload","setMessage","SET_MESSAGE"],"mappings":"4KA0CeA,gBAAWC,YAAQ,MAJP,SAAAC,GAAQ,MAAK,CACpCC,SAAU,SAAAC,GAAG,OAAIF,EAASC,YAASC,QAGbH,EApCN,SAAC,GAA2B,IAAzBE,EAAwB,EAAxBA,SAAUE,EAAc,EAAdA,QAAc,EACIC,cAAvCC,EADmC,EACnCA,kBAAmBC,EADgB,EAChBA,gBADgB,4CAE3C,WAAmCC,GAAnC,SAAAC,EAAA,6DACID,EAAEE,iBADN,SAGQR,EAAS,IAHjB,SAIcI,IAJd,OAKQF,EAAQO,KAAK,KALrB,gDAOQT,EAAS,KAAMU,SAPvB,0DAF2C,kEAY3C,WAAiCJ,GAAjC,SAAAC,EAAA,6DACID,EAAEE,iBADN,SAGQR,EAAS,IAHjB,SAIcK,IAJd,OAKQH,EAAQO,KAAK,KALrB,gDAOQT,EAAS,KAAMU,SAPvB,0DAZ2C,sBAsB3C,OACI,qBAAKC,UAAU,cAAf,SACI,+BACI,oBAAIA,UAAU,KAAd,SAAmB,wBAAQC,QAzBI,4CAyBZ,SAAsC,mBAAGD,UAAU,8BACtE,oBAAIA,UAAU,KAAd,SAAmB,wBAAQC,QA1BI,4CA0BZ,SAAoC,mBAAGD,UAAU,+B,gLCyCrEb,uBARS,SAAC,GAAD,MAAgB,CACpCe,MADoB,EAAGC,MACVD,UAGU,SAAAd,GAAQ,MAAK,CACpCC,SAAU,SAAAC,GAAG,OAAIF,EAASC,YAASC,QAGxBH,EAjEG,SAAC,GAAkC,IAAhCI,EAA+B,EAA/BA,QAASW,EAAsB,EAAtBA,MAAOb,EAAe,EAAfA,SACjCe,QAAQC,IAAId,GACZ,IAAMe,EAAWC,mBACXC,EAAcD,mBAH4B,EAItBf,cAAlBW,EAJwC,EAIxCA,MAAOM,EAJiC,EAIjCA,OAJiC,4CAKhD,WAA4Bd,GAA5B,SAAAC,EAAA,6DACID,EAAEE,iBADN,SAGQR,EAAS,IAHjB,SAIyBc,EAAMG,EAASI,QAAQC,MAAOH,EAAYE,QAAQC,OAJ3E,cAKeC,KAAKC,cACRtB,EAAQO,KAAK,MAEbT,EAAS,wDACToB,KATZ,gDAYQpB,EAAS,KAAMU,SAZvB,0DALgD,sBAoBhD,OACI,qBAAKC,UAAU,aAAf,SACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,yCACA,qBAAKA,UAAU,qBAAqBc,KAAK,QAAQC,MAAO,CAAEC,MAAO,MAAOC,SAAU,OAAQC,QAAmB,KAAVhB,EAAe,OAAS,SAA3H,SACKA,IAEL,qBAAKF,UAAU,aAAf,SACI,uBAAMA,UAAU,UAAUmB,SA7BE,4CA6B5B,UACI,sBAAKnB,UAAU,QAAf,UACI,uBAAOoB,QAAQ,QAAQpB,UAAU,QAAjC,mBACA,uBAAOqB,GAAG,eAAeC,KAAK,OAAOtB,UAAU,QAAQuB,IAAKjB,OAEhE,sBAAKN,UAAU,QAAf,UACI,uBAAOoB,QAAQ,OAAOpB,UAAU,QAAhC,sBACA,uBAAOqB,GAAG,cAAcC,KAAK,WAAWtB,UAAU,QAAQwB,YAAU,WAAWD,IAAKf,OAExF,qBAAKR,UAAU,QAAf,SACI,uBAAOsB,KAAK,SAAStB,UAAU,SAASW,MAAM,cAElD,sBAAKX,UAAU,eAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,cAAC,IAAD,CAAMyB,GAAG,UAAT,wBAEJ,cAAC,IAAD,CAAMA,GAAG,mBAAmBzB,UAAU,kBAAtC,iCAEJ,qBAAKA,UAAU,OACf,cAAC,IAAD,oB,gCCxD5B,gFAEaX,EAAU,SAAAC,GAAG,MAAK,CAC3BgC,KAAMI,IAAWC,UACjBC,QAAStC,IAGAuC,EAAa,SAAA9B,GAAO,MAAK,CAClCuB,KAAMI,IAAWI,YACjBF,QAAS7B","file":"static/js/14.0fdf8b2c.chunk.js","sourcesContent":["import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { useAuth } from '../../../contexts/auth_context';\r\nimport { setError } from '../../../redux/login/login.actions';\r\nimport './other-login.component.css';\r\n\r\nconst OthersLogin = ({ setError, history }) => {\r\n    const { loginWithFacebook, loginWithGoogle } = useAuth();\r\n    async function handleLoginFacebook(e) {\r\n        e.preventDefault()\r\n        try {\r\n            setError(\"\")\r\n            await loginWithFacebook()\r\n            history.push('/')\r\n        } catch (error) {\r\n            setError(error.message)\r\n        }\r\n    }\r\n    async function handleLoginGoogle(e) {\r\n        e.preventDefault()\r\n        try {\r\n            setError(\"\")\r\n            await loginWithGoogle()\r\n            history.push('/')\r\n        } catch (error) {\r\n            setError(error.message)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"login-other\">\r\n            <ul>\r\n                <li className=\"fb\"><button onClick={handleLoginFacebook}><i className=\"fa fa-facebook-square\"></i></button></li>\r\n                <li className=\"gl\"><button onClick={handleLoginGoogle}><i className=\"fa fa-google\"></i></button></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setError: err => dispatch(setError(err)),\r\n})\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(OthersLogin));","import { Link } from 'react-router-dom';\r\nimport './login.page.css';\r\nimport { useRef } from 'react';\r\nimport { useAuth } from '../../contexts/auth_context';\r\nimport { connect } from 'react-redux';\r\nimport { setError } from '../../redux/login/login.actions';\r\nimport OthersLogin from './components/others-login.component';\r\n\r\nconst LoginPage = ({ history, error, setError }) => {\r\n    console.log(history)\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { login, logout } = useAuth()\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        try {\r\n            setError(\"\")\r\n            const rs = await login(emailRef.current.value, passwordRef.current.value)\r\n            if (rs.user.emailVerified) {\r\n                history.push('/')\r\n            } else {\r\n                setError('The user not exists. The user may have been deleted.')\r\n                logout()\r\n            }\r\n        } catch (error) {\r\n            setError(error.message)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"login_page\">\r\n            <div className=\"login-wrap\">\r\n                <div className=\"login-content\">\r\n                    <h2>sign in</h2>\r\n                    <div className=\"alert alert-danger\" role=\"alert\" style={{ color: 'red', fontSize: '13px', display: error === '' ? 'none' : 'block' }}>\r\n                        {error}\r\n                    </div>\r\n                    <div className=\"login-form\">\r\n                        <form className=\"sign-in\" onSubmit={handleSubmit}>\r\n                            <div className=\"group\">\r\n                                <label htmlFor=\"email\" className=\"label\">Email</label>\r\n                                <input id=\"email-signin\" type=\"text\" className=\"input\" ref={emailRef}></input>\r\n                            </div>\r\n                            <div className=\"group\">\r\n                                <label htmlFor=\"pass\" className=\"label\">Password</label>\r\n                                <input id=\"pass-signin\" type=\"password\" className=\"input\" data-type=\"password\" ref={passwordRef}></input>\r\n                            </div>\r\n                            <div className=\"group\">\r\n                                <input type=\"submit\" className=\"button\" value=\"Sign In\"></input>\r\n                            </div>\r\n                            <div className=\"group forgot\">\r\n                                <div className=\"link-redirect\">\r\n                                    <Link to=\"/signup\">Sign Up?</Link>\r\n                                </div>\r\n                                <Link to=\"/forgot-password\" className=\"forgot-password\">Forgot Password?</Link>\r\n                            </div>\r\n                            <div className=\"hr\"></div>\r\n                            <OthersLogin />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ login }) => ({\r\n    error: login.error,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setError: err => dispatch(setError(err)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\r\n\r\n\r\n\r\n","import { LoginTypes } from \"./login.types\";\r\n\r\nexport const setError= err => ({\r\n    type: LoginTypes.SET_ERROR,\r\n    payload: err\r\n})\r\n\r\nexport const setMessage = message => ({\r\n    type: LoginTypes.SET_MESSAGE,\r\n    payload: message\r\n})"],"sourceRoot":""}