{"version":3,"sources":["assests/avatar.jpg","services/comment.service.js","redux/comment/comment.actions.js","components/comment/comment.component.js","pages/blog/components/lst-comments/lst-comment.component.js","pages/blog/detail/blog_detail.js","redux/blog/blog_actions.js","redux/common/common.actions.js"],"names":["CommentService","user","content","avatar","key","app","database","ref","push","keyParent","keyChild","setLstComments","comments","type","CommentTypes","SET_LST_COMMENTS","payload","connect","hiddenEmoji","comment","dispatch","setHiddenEmoji","HIDDEN_EMOJI","props","commentRef","useRef","emojiRef","currentUser","useAuth","handleComment","typeComment","e","a","current","value","displayName","photoURL","id","keyBlog","keyComment","target","closest","previousSibling","checked","console","log","TAG","useEffect","window","addEventListener","handleScroll","removeEventListener","className","src","alt","placeholder","onInput","style","height","scrollHeight","name","rows","wrap","onClick","aria-hidden","display","onSelect","emoji","native","Loading","textAlign","width","role","lstComments","idBlog","on","snap","val","lstCmt","Object","keys","map","idCmt","length","el","i","htmlFor","feedback","elm","blog","common","tagsBlog","isLoading","setTagsBlog","tags","setLoading","match","params","innerHTML","error","setLstBlogs","blogs","BlogTypes","SET_LST_BLOGS","setCountBlogs","count","SET_COUNT_BLOGS","SET_TAGS_BLOG","setTagsCreating","SET_TAGS_CREATING","setBlogInfo","blogInfo","SET_BLOG_INFO","setFilename","SET_FILENAME","toggleSaveBox","TOGGLE_SAVE_BOX","setProgressUpload","progress","PROGRESS_UPLOAD","setHiddenProgressUpload","status","HIDDEN_PROGRESS","CommonTypes","SET_LOADING"],"mappings":"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","file":"static/js/7.5fd503bd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar.e4c1ef62.jpg\";","import app from \"../firebase\";\r\n\r\nexport const CommentService = {\r\n    newComment: function (user, content, avatar, key) {\r\n        app.database().ref(`Blogs/${key}/comments`).push({\r\n            user,\r\n            content,\r\n            avatar\r\n        })\r\n    },\r\n    newFeedback: function (keyParent, keyChild, user, content, avatar) {\r\n        app.database().ref(`Blogs/${keyParent}/comments/${keyChild}/feedback`).push({\r\n            user,\r\n            content,\r\n            avatar\r\n        })\r\n    }\r\n}","import { CommentTypes } from \"./comment.types\";\r\n\r\nexport const setLstComments = comments => ({\r\n    type: CommentTypes.SET_LST_COMMENTS,\r\n    payload: comments\r\n})\r\n\r\nexport const setHiddenEmoji = () => ({\r\n    type: CommentTypes.HIDDEN_EMOJI\r\n})","import \"./comment.component.css\";\r\nimport { Picker } from 'emoji-mart';\r\nimport avatar from '../../assests/avatar.jpg';\r\nimport { useEffect, useRef } from \"react\";\r\nimport { CommentService } from \"../../services/comment.service\";\r\nimport { useAuth } from \"../../contexts/auth_context\";\r\nimport { setHiddenEmoji } from \"../../redux/comment/comment.actions\";\r\nimport { connect } from \"react-redux\";\r\nimport $ from 'jquery';\r\nconst Comments = (props) => {\r\n    const TAG = 'Comments';\r\n    const commentRef = useRef(null)\r\n    const emojiRef = useRef(null);\r\n    const { currentUser } = useAuth();\r\n    const handleShowEmoji = (e) => {\r\n        props.setHiddenEmoji();\r\n    }\r\n    const handleComment = async (typeComment, e) => {\r\n        try {\r\n            let comment = commentRef.current.value;\r\n            if (typeComment) {\r\n                if (comment !== '') {\r\n                    await CommentService.newComment(currentUser.displayName, comment, currentUser.photoURL, props.id);\r\n                    commentRef.current.value = '';\r\n                }\r\n            } else {\r\n                if (comment !== '') {\r\n                    await CommentService.newFeedback(props.keyBlog, props.keyComment, currentUser.displayName, comment, currentUser.photoURL);\r\n                    commentRef.current.value = '';\r\n                    e.target.closest('.feedback').previousSibling.checked = false\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(TAG + \": \" + error)\r\n        }\r\n    }\r\n    const handleCancel = (e) => {\r\n        e.target.closest('.feedback').previousSibling.checked = false\r\n    }\r\n    useEffect(()=>{\r\n        window.addEventListener('scroll', handleScroll);\r\n        return function clean(){\r\n            window.removeEventListener('scroll', handleScroll);\r\n        }\r\n    })\r\n    const handleScroll = () => {\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"comment\">\r\n                <div className=\"comment-avatar\">\r\n                    <img src={currentUser !== null ? currentUser.photoURL : avatar} alt={currentUser !== null ? currentUser.photoURL : ''}></img>\r\n                </div>\r\n                <div className=\"comment-type\">\r\n                    <textarea ref={commentRef} placeholder=\"Thêm bình luận\" id=\"comment-input\" onInput={() => {\r\n                        commentRef.current.style.height = 'auto';\r\n                        commentRef.current.style.height = commentRef.current.scrollHeight + \"px\";\r\n                    }} name=\"nowrap\" rows=\"2\" wrap=\"soft\"></textarea>\r\n                    <div className=\"comment-option\">\r\n                        <span onClick={handleShowEmoji}><i className=\"fa fa-smile-o\" aria-hidden=\"true\"></i></span>\r\n                        <div className=\"emoji-picker\" ref={emojiRef} style={{display: props.hiddenEmoji ? 'none' : 'block'}}>\r\n                            <Picker onSelect={(emoji, e) => {\r\n                                commentRef.current.value = commentRef.current.value + emoji.native;\r\n                            }} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"send\">\r\n                {!props.typeComment ? <button onClick={handleCancel} className=\"btn btn-primary\">Hủy</button> : ''}\r\n                <button className=\"btn btn-primary\" onClick={(e) => handleComment(props.typeComment, e)}>Bình luận</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ comment }) => ({\r\n    hiddenEmoji: comment.hiddenEmoji\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setHiddenEmoji: () => dispatch(setHiddenEmoji())\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments);","import { useEffect } from 'react';\r\nimport LazyLoad from 'react-lazyload';\r\nimport { connect } from 'react-redux';\r\nimport Comments from '../../../../components/comment/comment.component';\r\nimport app from '../../../../firebase';\r\nimport { setLstComments } from '../../../../redux/comment/comment.actions';\r\nimport './lst-comment.component.css';\r\n\r\nconst Loading = () => (\r\n    <div style={{ textAlign: 'center', width: '100%' }}>\r\n        <div className=\"spinner-border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst LstComments = ({ lstComments, setLstComments, idBlog }) => {\r\n    useEffect(() => {\r\n        setLstComments([]);\r\n        const db = app.database().ref(`Blogs/${idBlog}/comments`);\r\n        db.on('value', (snap) => {\r\n            if (snap.val() !== null) {\r\n                let lstCmt = Object.keys(snap.val()).map(val => {\r\n                    return { idCmt: val, value: snap.val()[val] }\r\n                })\r\n                setLstComments(lstCmt);\r\n            }\r\n        });\r\n    }, [])\r\n    if (lstComments.length > 0)\r\n        return (\r\n            <div className=\"list-comments\">\r\n                <div className=\"cmt-content\">\r\n                    {lstComments ? lstComments.map((el, i) => {\r\n                        return <LazyLoad key={i} className=\"cmt\" placeholder={<Loading />}>\r\n                            <div className=\"comments-user\">\r\n                                <img src={el.value.avatar} alt={el.value.avatar}></img>\r\n                                <div className=\"comments-content\">\r\n                                    <h6>{el.value.user}</h6>\r\n                                    <p>{el.value.content}</p>\r\n                                    <div className=\"comments-action\">\r\n                                        <span className=\"action\">Thích</span>\r\n                                        <label className=\"action\" htmlFor={el.idCmt}>Phản hồi</label>\r\n                                        <span><i className=\"fa fa-thumbs-up\" aria-hidden=\"true\"></i> 2</span>\r\n                                    </div> \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"cmt-feedback\">\r\n                                {\r\n                                    typeof el.value.feedback !== 'undefined' ?\r\n                                        Object.keys(el.value.feedback).map((elm, i) => {\r\n                                            return <div key={i} className=\"cmt\">\r\n                                                <div className=\"comments-user\">\r\n                                                    <img src={el.value.feedback[elm].avatar} alt={el.value.feedback[elm].avatar}></img>\r\n                                                    <div className=\"comments-content\">\r\n                                                        <h6>{el.value.feedback[elm].user}</h6>\r\n                                                        <p>{el.value.feedback[elm].content}</p>\r\n                                                        <div className=\"comments-action\">\r\n                                                            <span className=\"action\">Thích</span>\r\n                                                            <label className=\"action\" htmlFor={el.idCmt}>Phản hồi</label>\r\n                                                            <span><i className=\"fa fa-thumbs-up\" aria-hidden=\"true\"></i> 2</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        }) : <div></div>\r\n                                }\r\n                            </div>\r\n                            <input type=\"checkbox\" name=\"feedback\" className=\"feedbackCK\" id={el.idCmt}></input>\r\n                            <div className=\"feedback\">\r\n                                <Comments typeComment={false} keyComment={el.idCmt} keyBlog={idBlog} />\r\n                            </div>\r\n                        </LazyLoad>\r\n                    }) : null}\r\n                </div>\r\n            </div>\r\n        )\r\n    else return null\r\n}\r\n\r\nconst mapStateToProps = ({ comment }) => ({\r\n    lstComments: comment.lstComments\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setLstComments: comments => dispatch(setLstComments(comments))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LstComments);","import { useEffect, useRef } from \"react\"\r\nimport './blog_detail.css';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\nimport Comments from '../../../components/comment/comment.component';\r\nimport { connect } from \"react-redux\";\r\nimport { setTagsBlog } from \"../../../redux/blog/blog_actions\";\r\nimport { setLstComments } from '../../../redux/comment/comment.actions';\r\nimport LstComments from \"../components/lst-comments/lst-comment.component\";\r\nimport app from \"../../../firebase\";\r\nimport { setLoading } from \"../../../redux/common/common.actions\";\r\nconst BlogDetailPage = ({ tagsBlog, setTagsBlog, match, isLoading, setLoading }) => {\r\n    const TAG = \"BlogDetail\";\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        setTagsBlog([]);\r\n        (async function () {\r\n            try {\r\n                const db = app.database().ref(`Blogs/${match.params.id}`);\r\n                db.on('value', (snap) => {\r\n                    if (snap.val() !== null) {\r\n                        setTagsBlog(snap.val().tags);\r\n                        if (ref.current !== null) {\r\n                            setLoading(false)\r\n                            ref.current.innerHTML = snap.val().content;\r\n                        }\r\n                    }\r\n                });\r\n            } catch (error) {\r\n                console.log(TAG + ': ' + error);\r\n            }\r\n        }())\r\n    }, [])\r\n    if (isLoading) {\r\n        return (\r\n            <div style={{ textAlign: 'center' }} className=\"blog-page\">\r\n                <div className=\"spinner-grow\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else\r\n        return (\r\n            <div className=\"blog-detail-page\">\r\n                <div className=\"ck-content\">\r\n                    <div ref={ref}></div>\r\n                </div>\r\n                <ul className=\"blog-tags-list\">\r\n                    {tagsBlog.map((el, i) => {\r\n                        return <li key={i}>{el}</li>\r\n                    })}\r\n                </ul>\r\n                <Comments typeComment={true} id={match.params.id} />\r\n                <LstComments idBlog={match.params.id} />\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = ({ blog, comment, common }) => ({\r\n    tagsBlog: blog.tagsBlog,\r\n    lstComments: comment.lstComments,\r\n    isLoading: common.isLoading\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setTagsBlog: tags => dispatch(setTagsBlog(tags)),\r\n    setLstComments: comments => dispatch(setLstComments(comments)),\r\n    setLoading: (isLoading) => dispatch(setLoading(isLoading))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogDetailPage);","import { BlogTypes } from \"./blog.types\";\r\n\r\nexport const setLstBlogs = blogs => ({\r\n    type: BlogTypes.SET_LST_BLOGS,\r\n    payload: blogs\r\n})\r\n\r\nexport const setCountBlogs = count => ({\r\n    type: BlogTypes.SET_COUNT_BLOGS,\r\n    payload: count\r\n})\r\n\r\nexport const setTagsBlog = tags => ({\r\n    type: BlogTypes.SET_TAGS_BLOG,\r\n    payload: tags\r\n})\r\n\r\nexport const setTagsCreating = tags => ({\r\n    type: BlogTypes.SET_TAGS_CREATING,\r\n    payload: tags\r\n})\r\n\r\nexport const setBlogInfo = blogInfo => ({\r\n    type: BlogTypes.SET_BLOG_INFO,\r\n    payload: blogInfo\r\n})\r\n\r\nexport const setFilename = name => ({\r\n    type: BlogTypes.SET_FILENAME,\r\n    payload: name\r\n})\r\n\r\nexport const toggleSaveBox = () => ({\r\n    type: BlogTypes.TOGGLE_SAVE_BOX\r\n})\r\n\r\nexport const setProgressUpload = (progress) => ({\r\n    type: BlogTypes.PROGRESS_UPLOAD,\r\n    payload: progress\r\n})\r\n\r\nexport const setHiddenProgressUpload = (status) => ({\r\n    type: BlogTypes.HIDDEN_PROGRESS,\r\n    payload: status\r\n})","import { CommonTypes } from \"./common.types\";\r\n\r\nexport const setLoading = isLoading => ({\r\n    type: CommonTypes.SET_LOADING,\r\n    payload: isLoading\r\n})"],"sourceRoot":""}