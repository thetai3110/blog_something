{"version":3,"sources":["redux/comment/comment.actions.js","assests/avatar.jpg","services/comment.service.js","pages/blog/components/composer-edittext/composer-edittext.component.js","pages/blog/components/comment/comment.js","pages/blog/components/lst-comments/lst-comment.component.js","pages/blog/detail/blog-detail.page.js","redux/blog/blog_actions.js"],"names":["setLstComments","comments","type","CommentTypes","SET_LST_COMMENTS","payload","CommentService","user","content","avatar","key","app","database","ref","push","keyParent","keyChild","connect","hiddenEmoji","comment","dispatch","setHiddenEmoji","HIDDEN_EMOJI","props","commentRef","useRef","emojiRef","currentUser","useAuth","handleComment","typeComment","a","current","value","displayName","photoURL","idBlog","idComment","console","log","TAG","useEffect","className","src","alt","placeholder","id","onInput","style","height","scrollHeight","name","rows","wrap","onClick","e","showWithId","$","css","aria-hidden","onSelect","emoji","native","Comment","window","scrollTop","offsetTop","animate","composer","children","containEdit","focus","lstComments","on","snap","val","lstCmt","Object","keys","map","idCmt","length","el","i","feedback","elm","blog","tagsBlog","setTagsBlog","tags","match","useState","loading","setLoading","params","innerHTML","error","setLstBlogs","blogs","BlogTypes","SET_LST_BLOGS","setLstDrafts","drafts","SET_LST_DRAFTS","setLstPublics","publics","SET_LST_PUBLICS","setLstPrivates","privates","SET_LST_PRIVATES","setCountBlogs","count","SET_COUNT_BLOGS","setCountDrafts","SET_COUNT_DRAFTS","setCountPublics","SET_COUNT_PUBLICS","setCountPrivates","SET_COUNT_PRIVATES","SET_TAGS_BLOG","setBlogInfo","blogInfo","SET_BLOG_INFO","setFilename","SET_FILENAME","toggleSaveBox","TOGGLE_SAVE_BOX","setProgressUpload","progress","PROGRESS_UPLOAD","setHiddenProgressUpload","status","HIDDEN_PROGRESS","setHiddenSidebar","hidden","HIDDEN_SIDEBAR","setAllTags","SET_ALL_TAG","setSearchInfo","info","SEARCH_INFO","setSelectionRange","selectionRange","SET_SELECTION_RANGE"],"mappings":"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","file":"static/js/8.a1926c21.chunk.js","sourcesContent":["import { CommentTypes } from \"./comment.types\";\r\n\r\nexport const setLstComments = comments => ({\r\n    type: CommentTypes.SET_LST_COMMENTS,\r\n    payload: comments\r\n})\r\n\r\nexport const setHiddenEmoji = () => ({\r\n    type: CommentTypes.HIDDEN_EMOJI\r\n})","export default __webpack_public_path__ + \"static/media/avatar.e4c1ef62.jpg\";","import app from \"../firebase\";\r\n\r\nexport const CommentService = {\r\n    newComment: function (user, content, avatar, key) {\r\n        app.database().ref(`Blogs/${key}/comments`).push({\r\n            user,\r\n            content,\r\n            avatar\r\n        })\r\n    },\r\n    newFeedback: function (keyParent, keyChild, user, content, avatar) {\r\n        app.database().ref(`Blogs/${keyParent}/comments/${keyChild}/feedback`).push({\r\n            user,\r\n            content,\r\n            avatar\r\n        })\r\n    }\r\n}","import \"./composer-edittext.component.css\";\r\nimport { Picker } from 'emoji-mart';\r\nimport avatar from '../../../../assests/avatar.jpg';\r\nimport { useEffect, useRef } from \"react\";\r\nimport { CommentService } from \"../../../../services/comment.service\";\r\nimport { useAuth } from \"../../../../contexts/auth_context\";\r\nimport { setHiddenEmoji } from \"../../../../redux/comment/comment.actions\";\r\nimport { connect } from \"react-redux\";\r\nimport $ from 'jquery';\r\n\r\nconst ComposerEditText = (props) => {\r\n    const TAG = 'Comments';\r\n    const commentRef = useRef(null)\r\n    const emojiRef = useRef(null);\r\n    const { currentUser } = useAuth();\r\n    const handleComment = async (typeComment) => {\r\n        try {\r\n            let comment = commentRef.current.value;\r\n            if (typeComment) {\r\n                if (comment !== '') {\r\n                    await CommentService.newComment(currentUser.displayName, comment, currentUser.photoURL, props.idBlog);\r\n                    commentRef.current.value = '';\r\n                }\r\n            } else {\r\n                if (comment !== '') {\r\n                    await CommentService.newFeedback(props.idBlog, props.idComment, currentUser.displayName, comment, currentUser.photoURL);\r\n                    commentRef.current.value = '';\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(TAG + \": \" + error)\r\n        }\r\n    }\r\n    const handleShowEmoji = (e) => {\r\n        const id = \"#emoji\" + props.showWithId;\r\n        if ($(id).css(\"display\") === \"none\") {\r\n            $('.emoji-picker').css(\"display\", \"none\");\r\n            $(id).css(\"display\", \"block\");\r\n        }\r\n        else\r\n            $(id).css(\"display\", \"none\");\r\n        // if ($(id)[0].getBoundingClientRect().top < 0) {\r\n        //     $(id).css('top', '100%');\r\n        // } else if ($(id)[0].getBoundingClientRect().top >= $(id)[0].offsetHeight) {\r\n        //     $(id).css('bottom', '100%');\r\n        // }\r\n    }\r\n    const handleCancel = (e) => {\r\n        $('.feedback-feedback').css(\"display\", \"none\");\r\n    }\r\n    useEffect(() => {\r\n        // window.addEventListener('scroll', handleScroll);\r\n        // // $('#list-comments').on(\"scroll\", handleScroll1)\r\n        // return function clean() {\r\n        //     window.removeEventListener('scroll', handleScroll);\r\n        // }\r\n    })\r\n    // const handleScroll = () => {\r\n    //     const id = \"#emoji\" + props.showWithId;\r\n    //     console.log(($(id)[0].getBoundingClientRect().top + $(id)[0].offsetHeight) + \" - \" + window.innerHeight)\r\n    //     if ($(id)[0].getBoundingClientRect().top < 0) {\r\n    //         $(id).css('top', '100%');\r\n    //     } else if (($(id)[0].getBoundingClientRect().top + $(id)[0].offsetHeight) > window.innerHeight) {\r\n    //         $(id).css('bottom', '100%');\r\n    //     }\r\n    // }\r\n    // const handleScroll1 = () => {\r\n    //     const id = \"#emoji\" + props.showWithId;\r\n    //     if (($(id)[0].offsetTop - $(\"#list-comments\")[0].offsetTop) < 0) {\r\n    //         $(id).css('top', '100%');\r\n    //     } else if (($(id)[0].offsetTop - $(\"#list-comments\")[0].offsetTop) >= $(\"#list-comments\")[0].scrollHeight) {\r\n    //         $(id).css('bottom', '100%');\r\n    //     }\r\n    // }\r\n    return (\r\n        <>\r\n            <div className=\"composer-edittext\">\r\n                <div className=\"composer-edittext-avatar\">\r\n                    <img src={currentUser !== null ? currentUser.photoURL : avatar} alt={currentUser !== null ? currentUser.photoURL : ''}></img>\r\n                </div>\r\n                <div className=\"composer-edittext-type\">\r\n                    <textarea ref={commentRef} placeholder=\"Thêm bình luận\" id=\"composer-edittext-input\" onInput={() => {\r\n                        commentRef.current.style.height = 'auto';\r\n                        commentRef.current.style.height = commentRef.current.scrollHeight + \"px\";\r\n                    }} name=\"nowrap\" rows=\"2\" wrap=\"soft\"></textarea>\r\n                    <div className=\"composer-edittext-option\">\r\n                        <span onClick={handleShowEmoji}><i className=\"fa fa-smile-o\" aria-hidden=\"true\"></i></span>\r\n                        <div className=\"emoji-picker\" ref={emojiRef} id={`emoji${props.showWithId}`}>\r\n                            <Picker onSelect={(emoji) => {\r\n                                commentRef.current.value = commentRef.current.value + emoji.native;\r\n                            }} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"send\">\r\n                {!props.typeComment ? <button onClick={handleCancel} className=\"btn btn-primary\">Hủy</button> : ''}\r\n                <button className=\"btn btn-primary\" onClick={(e) => handleComment(props.typeComment, e)}>Bình luận</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ comment }) => ({\r\n    hiddenEmoji: comment.hiddenEmoji\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setHiddenEmoji: () => dispatch(setHiddenEmoji())\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ComposerEditText);","import './comment.css';\r\nimport $ from 'jquery';\r\n\r\nconst Comment = ({ comment, showWithId }) => {\r\n    const handleFeedback = (e) => {\r\n        // Scroll body\r\n        $(window).scrollTop($(\"#list-comments\")[0].offsetTop);\r\n\r\n        // Scroll comment\r\n        const id = \"#feedback\" + showWithId;\r\n        $('.feedback-feedback').css(\"display\", \"none\");\r\n        $(id).css(\"display\", \"block\");\r\n        $('#list-comments').animate({\r\n            scrollTop: $(id)[0].offsetTop - $(\"#list-comments\")[0].offsetTop - $(id).height()\r\n        }, 1000);\r\n        // Select textarea\r\n        let composer = $(id).children()[0];\r\n        let containEdit = $(composer).children()[1];\r\n        $(containEdit).children()[0].focus();\r\n    }\r\n    return (\r\n        <div className=\"comment\">\r\n            <img src={comment.avatar} alt={comment.avatar}></img>\r\n            <div className=\"comment-content\">\r\n                <h6>{comment.user}</h6>\r\n                <p>{comment.content}</p>\r\n                <div className=\"comment-action\">\r\n                    <span className=\"action\">Thích</span>\r\n                    <label className=\"action\" onClick={handleFeedback}>Phản hồi</label>\r\n                    <span><i className=\"fa fa-thumbs-up\" aria-hidden=\"true\"></i> 2</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment;","import { useEffect } from 'react';\r\nimport LazyLoad from 'react-lazyload';\r\nimport { connect } from 'react-redux';\r\nimport app from '../../../../firebase';\r\nimport { setLstComments } from '../../../../redux/comment/comment.actions';\r\nimport './lst-comment.component.css';\r\nimport ComposerEditText from '../composer-edittext/composer-edittext.component';\r\nimport Comment from '../comment/comment';\r\nimport Loading from '../../../../components/loading/loading';\r\n\r\nconst LstComments = ({ lstComments, setLstComments, idBlog }) => {\r\n    useEffect(() => {\r\n        // Find comments\r\n        setLstComments([]);\r\n        const db = app.database().ref(`Blogs/${idBlog}/comments`);\r\n        db.on('value', (snap) => {\r\n            if (snap.val() !== null) {\r\n                let lstCmt = Object.keys(snap.val()).map(val => {\r\n                    return { idCmt: val, value: snap.val()[val] }\r\n                })\r\n                setLstComments(lstCmt);\r\n            }\r\n        });\r\n    }, [])\r\n    return (\r\n        <>\r\n            {lstComments.length > 0 ? <div id=\"list-comments\">\r\n                <div className=\"cmt-content\">\r\n                    {lstComments.map((el, i) => {\r\n                        return <div key={i}>\r\n                            <LazyLoad className=\"cmt\" placeholder={<Loading />}>\r\n                                <Comment comment={el.value} showWithId={el.idCmt} />\r\n                            </LazyLoad>\r\n                            <div className=\"feedback\">\r\n                                {typeof el.value.feedback !== 'undefined' ?\r\n                                    Object.keys(el.value.feedback).map((elm, i) => {\r\n                                        return <LazyLoad key={i} className=\"cmt\" placeholder={<Loading />}>\r\n                                            <div className=\"cmt\">\r\n                                                <Comment comment={el.value.feedback[elm]} showWithId={elm} />\r\n                                                <div id={`feedback${elm}`} className=\"feedback-feedback\">\r\n                                                    <ComposerEditText typeComment={false} idComment={el.idCmt} idBlog={idBlog} showWithId={elm} />\r\n                                                </div>\r\n                                            </div>\r\n                                        </LazyLoad>\r\n                                    }) : <div></div>\r\n                                }\r\n                            </div>\r\n                            <div id={`feedback${el.idCmt}`} className=\"feedback-feedback\">\r\n                                <ComposerEditText typeComment={false} idComment={el.idCmt} idBlog={idBlog} showWithId={el.idCmt} />\r\n                            </div>\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div> : null}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ comment }) => ({\r\n    lstComments: comment.lstComments\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setLstComments: comments => dispatch(setLstComments(comments))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LstComments);","import { useEffect, useRef, useState } from \"react\"\r\nimport './blog-detail.page.css';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\nimport { connect } from \"react-redux\";\r\nimport { setTagsBlog } from \"../../../redux/blog/blog_actions\";\r\nimport { setLstComments } from '../../../redux/comment/comment.actions';\r\nimport LstComments from \"../components/lst-comments/lst-comment.component\";\r\nimport app from \"../../../firebase\";\r\nimport ComposerEditText from \"../components/composer-edittext/composer-edittext.component\";\r\nimport Loading from \"../../../components/loading/loading\";\r\nconst BlogDetailPage = ({ tagsBlog, setTagsBlog, match }) => {\r\n    const TAG = \"BlogDetail\";\r\n    const [loading, setLoading] = useState(true);\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        setTagsBlog([]);\r\n        (async function () {\r\n            try {\r\n                const db = app.database().ref(`Blogs/${match.params.id}`);\r\n                db.on('value', (snap) => {\r\n                    if (snap.val() !== null) {\r\n                        setTagsBlog(snap.val().tags);\r\n                        if (ref.current !== null) {\r\n                            setLoading(false);\r\n                            ref.current.innerHTML = snap.val().content;\r\n                        }\r\n                    }\r\n                });\r\n            } catch (error) {\r\n                console.log(TAG + ': ' + error);\r\n            }\r\n        }())\r\n    }, [])\r\n    if (loading) {\r\n        return <Loading></Loading>\r\n    } else\r\n        return (\r\n            <div className=\"blog-detail-page\">\r\n                <div className=\"ck-content\">\r\n                    <div ref={ref}></div>\r\n                </div>\r\n                <ul className=\"blog-tags-list\">\r\n                    {tagsBlog ? tagsBlog.map((el, i) => {\r\n                        return <li key={i}>{el}</li>\r\n                    }) : null}\r\n                </ul>\r\n                <ComposerEditText typeComment={true} idBlog={match.params.id} showWithId=\"default\" />\r\n                <LstComments idBlog={match.params.id} />\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = ({ blog, comment }) => ({\r\n    tagsBlog: blog.tagsBlog,\r\n    lstComments: comment.lstComments,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setTagsBlog: tags => dispatch(setTagsBlog(tags)),\r\n    setLstComments: comments => dispatch(setLstComments(comments))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogDetailPage);","import { BlogTypes } from \"./blog.types\";\r\n\r\nexport const setLstBlogs = blogs => ({\r\n    type: BlogTypes.SET_LST_BLOGS,\r\n    payload: blogs\r\n})\r\n\r\nexport const setLstDrafts = drafts => ({\r\n    type: BlogTypes.SET_LST_DRAFTS,\r\n    payload: drafts\r\n})\r\n\r\nexport const setLstPublics = publics => ({\r\n    type: BlogTypes.SET_LST_PUBLICS,\r\n    payload: publics\r\n})\r\n\r\nexport const setLstPrivates = privates => ({\r\n    type: BlogTypes.SET_LST_PRIVATES,\r\n    payload: privates\r\n})\r\n\r\nexport const setCountBlogs = count => ({\r\n    type: BlogTypes.SET_COUNT_BLOGS,\r\n    payload: count\r\n})\r\n\r\nexport const setCountDrafts = count => ({\r\n    type: BlogTypes.SET_COUNT_DRAFTS,\r\n    payload: count\r\n})\r\n\r\nexport const setCountPublics = count => ({\r\n    type: BlogTypes.SET_COUNT_PUBLICS,\r\n    payload: count\r\n})\r\n\r\nexport const setCountPrivates = count => ({\r\n    type: BlogTypes.SET_COUNT_PRIVATES,\r\n    payload: count\r\n})\r\n\r\nexport const setTagsBlog = tags => ({\r\n    type: BlogTypes.SET_TAGS_BLOG,\r\n    payload: tags\r\n})\r\n\r\nexport const setBlogInfo = blogInfo => ({\r\n    type: BlogTypes.SET_BLOG_INFO,\r\n    payload: blogInfo\r\n})\r\n\r\nexport const setFilename = name => ({\r\n    type: BlogTypes.SET_FILENAME,\r\n    payload: name\r\n})\r\n\r\nexport const toggleSaveBox = () => ({\r\n    type: BlogTypes.TOGGLE_SAVE_BOX\r\n})\r\n\r\nexport const setProgressUpload = (progress) => ({\r\n    type: BlogTypes.PROGRESS_UPLOAD,\r\n    payload: progress\r\n})\r\n\r\nexport const setHiddenProgressUpload = (status) => ({\r\n    type: BlogTypes.HIDDEN_PROGRESS,\r\n    payload: status\r\n})\r\n\r\nexport const setHiddenSidebar = (hidden) => ({\r\n    type: BlogTypes.HIDDEN_SIDEBAR,\r\n    payload: hidden\r\n})\r\n\r\nexport const setAllTags = (tags) => ({\r\n    type: BlogTypes.SET_ALL_TAG,\r\n    payload: tags\r\n})\r\n\r\nexport const setSearchInfo = (info) => ({\r\n    type: BlogTypes.SEARCH_INFO,\r\n    payload: info\r\n})\r\n\r\nexport const setSelectionRange = (selectionRange) => ({\r\n    type: BlogTypes.SET_SELECTION_RANGE,\r\n    payload: selectionRange\r\n})"],"sourceRoot":""}